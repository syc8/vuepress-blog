(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{306:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"js基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js基础知识"}},[t._v("#")]),t._v(" js基础知识")]),t._v(" "),s("h3",{attrs:{id:"原型与原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型与原型链"}},[t._v("#")]),t._v(" 原型与原型链")]),t._v(" "),s("h4",{attrs:{id:"原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[t._v("#")]),t._v(" 原型")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("函数也是对象，任何一个函数中都有一个 prototype 属性，也是一个对象，即 原型对象")])]),t._v(" "),s("li",[s("p",[t._v("该对象的所以成员， 都可以被 其构造函数的 实例对象访问")])])]),t._v(" "),s("h4",{attrs:{id:"原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),s("blockquote",[s("p",[t._v("使用构造函数新建对象后， 内部会包含一个指针： "),s("code",[t._v("_ proto _")]),t._v("   这个属性就相当于一个链，指向了构造函数的prototype属性，串联起来了原型链")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("浏览器中现在支持显示的使用 "),s("strong",[t._v("proto")]),t._v(" 属性，但不推荐(不是规范中规定的)")])]),t._v(" "),s("li",[s("p",[t._v("ES5 中新增了一个 "),s("code",[t._v("Object.getPrototypeOf()")]),t._v(" 方法，我们可以通过这个方法来获取对 象的原型。")])])]),t._v(" "),s("p",[s("strong",[t._v("当我们访问一个对象的属性时 ( 查找规则就是原型链的概念 )")])]),t._v(" "),s("ol",[s("li",[t._v("先在自己身上找， 没有就去它的原型对象里找")]),t._v(" "),s("li",[t._v("若没有，继续侧沿着原型链向上找")]),t._v(" "),s("li",[t._v("最终到达 Object.prototype，上查找")]),t._v(" "),s("li",[t._v("若没有，则找到 Object.prototype. _ proto _ 这里是 null,也是原型链的终点")])]),t._v(" "),s("blockquote",[s("p",[t._v("原型链的尽头一般来说都是 Object.prototype 所以这就 是我们新建的对象为什么能够使用 toString() 等方法的原因。")])]),t._v(" "),s("h3",{attrs:{id:"构造-原型-实例-之间关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造-原型-实例-之间关系"}},[t._v("#")]),t._v(" 构造，原型，实例 之间关系")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("实例对象的 _ proto _     -----指向 ------    原型对象（即构造函数的原型）")]),t._v(" "),s("blockquote",[s("p",[t._v("new Person. _ proto _  指向   Person.prototype")])])]),t._v(" "),s("li",[s("p",[t._v("实例对象的 constructor     -----指向------   构造函数")]),t._v(" "),s("blockquote",[s("p",[t._v("new Person. _ constructor   指向   function Person()")])])]),t._v(" "),s("li",[s("p",[t._v("原型对象的 constructor      -----指向----      构造函数")]),t._v(" "),s("blockquote",[s("p",[t._v("Person.prototype .constructor  指向  function Person()")])])]),t._v(" "),s("li",[s("p",[t._v("new 构造函数     -----等于-----     实例")])])]),t._v(" "),s("h3",{attrs:{id:"继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),s("ol",[s("li",[s("h5",{attrs:{id:"原型链继承-将子类的原型-指向父类的实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链继承-将子类的原型-指向父类的实例"}},[t._v("#")]),t._v(" 原型链继承：  将子类的原型 指向父类的实例")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" New "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[t._v("简单易用")]),t._v(" "),s("li",[t._v("但子类新增方法各成员必须在 "),s("strong",[t._v("用原型 继承父类实例 之后")])])])]),t._v(" "),s("li",[s("h5",{attrs:{id:"构造继承-子类通过-call-复制父类的成功给子类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造继承-子类通过-call-复制父类的成功给子类"}},[t._v("#")]),t._v(" 构造继承：  子类通过 call  复制父类的成功给子类")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" son "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" New "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[t._v("可以实现多继承（call多个父类对象）")]),t._v(" "),s("li",[t._v("只能继承父类构造函数的成员，不可继承父类原型的成员")]),t._v(" "),s("li",[t._v("实例并不是父类的实例，只是子类的实例")]),t._v(" "),s("li",[t._v("无法实现函数复用，每个子类都有父类实例函数的副本，影响性能")])])]),t._v(" "),s("li",[s("h5",{attrs:{id:"实例继承-为-父类实例-添加新特性-并把-父类实例-作为-子类实例-return-返回"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例继承-为-父类实例-添加新特性-并把-父类实例-作为-子类实例-return-返回"}},[t._v("#")]),t._v(" 实例继承： 为 "),s("strong",[t._v("父类实例")]),t._v(" 添加新特性，并把 "),s("strong",[t._v("父类实例")]),t._v(" 作为 "),s("strong",[t._v("子类实例")]),t._v(" return 返回")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sonInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    sonInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n    sonInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sonInstance\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" son "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("h5",{attrs:{id:"拷贝继承-利用循环-从父类构造的实例上拷贝-到子类原型上-来实现继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拷贝继承-利用循环-从父类构造的实例上拷贝-到子类原型上-来实现继承"}},[t._v("#")]),t._v(" 拷贝继承： 利用循环，从"),s("strong",[t._v("父类构造的实例上拷贝")]),t._v("  到子类原型上 来实现继承")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" father "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" father"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" father"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Test Code")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" son "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("son "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("son "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])]),t._v(" "),s("li",[s("h5",{attrs:{id:"组合继承-相当与-1原型链继承-与-2构造继承-结合使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组合继承-相当与-1原型链继承-与-2构造继承-结合使用"}},[t._v("#")]),t._v(" 组合继承： 相当与 1原型链继承 与 2构造继承 结合使用")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" New "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组合继承也是需要修复构造函数指向的。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Son\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" son "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" New "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("寄生组件继承： 通过寄生的方式来修复组合式继承的不足，完美的实现继承")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//父类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("People")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wangxiao'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//父类方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("People")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("eat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eat sleep'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//子类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Woman")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//继承父类属性")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("People")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//继承父类方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建空类")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Super")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将空类的原型，指向父类的原型")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("People")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子类的原型 再指向 父类的实例")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Woman")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修复构造函数指向问题")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Woman")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Woman"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" womanObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Woman")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"es6新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6新特性"}},[t._v("#")]),t._v(" es6新特性")]),t._v(" "),s("h3",{attrs:{id:"dom事件和事件流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom事件和事件流"}},[t._v("#")]),t._v(" DOM事件和事件流")]),t._v(" "),s("h3",{attrs:{id:"盒子模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型"}},[t._v("#")]),t._v(" 盒子模型")]),t._v(" "),s("h3",{attrs:{id:"bfc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),s("h3",{attrs:{id:"flex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[t._v("#")]),t._v(" Flex")]),t._v(" "),s("h3",{attrs:{id:"promise原理以及手写代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise原理以及手写代码"}},[t._v("#")]),t._v(" Promise原理以及手写代码")]),t._v(" "),s("h3",{attrs:{id:"http缓存机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http缓存机制"}},[t._v("#")]),t._v(" HTTP缓存机制")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("强制缓存")]),t._v(" "),s("blockquote",[s("p",[t._v("一般我们网站中的css,js等资源会用强制缓存，（其文件名中跟随hash版本号的话，如果已经更新，通过文件名就可以判断版本号）")])])]),t._v(" "),s("li",[s("p",[t._v("协商缓存")]),t._v(" "),s("blockquote",[s("p",[t._v("一般我们网站中的html文档，因为更新的机率大一些，使用协商缓存询问比较好")])])])]),t._v(" "),s("h1",{attrs:{id:"面试中遇到的高频题-跟上面会有重合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试中遇到的高频题-跟上面会有重合"}},[t._v("#")]),t._v(" 面试中遇到的高频题(跟上面会有重合)")]),t._v(" "),s("h3",{attrs:{id:"webpack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[t._v("#")]),t._v(" webpack")]),t._v(" "),s("p",[t._v("打包流程")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("解析配置文件：Webpack 会读取并解析配置文件（通常是 "),s("code",[t._v("webpack.config.js")]),t._v(" 文件），并根据配置生成一个 Compiler 对象。")]),t._v(" "),s("li",[t._v("读取入口文件：Webpack 根据配置中的入口文件，读取这些文件及其依赖的模块，并将它们组成一个依赖图。")]),t._v(" "),s("li",[t._v("解析模块依赖：Webpack 会根据模块之间的依赖关系，递归地解析它们的依赖，直到所有的依赖都被解析完毕。")]),t._v(" "),s("li",[t._v("加载模块：Webpack 会根据模块的路径，使用相应的 Loader 加载模块的源代码，并将其转换为 Webpack 可以处理的形式。")]),t._v(" "),s("li",[t._v("转换代码：Webpack 会根据配置中的插件，对加载的模块进行一系列的转换操作，比如压缩、合并、优化等。")]),t._v(" "),s("li",[t._v("生成代码：Webpack 会将所有模块转换后的代码合并成一个或多个文件，并输出到指定的输出目录中。")])])]),t._v(" "),s("h3",{attrs:{id:"event-loop-事件循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-loop-事件循环"}},[t._v("#")]),t._v(" event loop 事件循环")]),t._v(" "),s("blockquote",[s("p",[t._v("js代码执行基于一种事件循环机制，会先执行主进程代码，异步代码分别放到执行队列内")])]),t._v(" "),s("p",[t._v("异步任务分为两种，宏任务和微任务")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("微任务 micro （顺序=优先级）")]),t._v(" "),s("ul",[s("li",[t._v("process.next回调")]),t._v(" "),s("li",[t._v("promise.then()")])])]),t._v(" "),s("li",[s("p",[t._v("宏任务 macro （顺序=优先级）")]),t._v(" "),s("ul",[s("li",[t._v("setTimeOut")]),t._v(" "),s("li",[t._v("readFile回调 （只在nodejs有）")]),t._v(" "),s("li",[t._v("setImmediate")]),t._v(" "),s("li",[t._v("socket.close 回调 （只在nodejs有）")])])])]),t._v(" "),s("h5",{attrs:{id:"执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行顺序"}},[t._v("#")]),t._v(" 执行顺序：")]),t._v(" "),s("blockquote",[s("p",[t._v("执行主进程代码 --\x3e  异步微任务 ---\x3e 异步宏任务   ---\x3e 微任务 ---\x3e 宏任务。。。。")])]),t._v(" "),s("h5",{attrs:{id:"浏览器和-node-环境下-microtask-任务队列的执行时机不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器和-node-环境下-microtask-任务队列的执行时机不同"}},[t._v("#")]),t._v(" 浏览器和 Node 环境下，microtask 任务队列的执行时机不同")]),t._v(" "),s("ul",[s("li",[t._v("Node 端，microtask 在事件循环的各个阶段之间执行，"),s("em",[s("strong",[t._v("node每次执行宏任务会执行所有的")])])]),t._v(" "),s("li",[t._v("浏览器端，microtask 在事件循环的"),s("em",[t._v("各个宏任务")]),t._v(" macrotask 执行完之后执行，"),s("em",[s("strong",[t._v("浏览器每次只执行一个宏任务就会去执行微任务")])])])]),t._v(" "),s("h3",{attrs:{id:"vue3解决什么问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue3解决什么问题"}},[t._v("#")]),t._v(" vue3解决什么问题")]),t._v(" "),s("h3",{attrs:{id:"vue-为什么不能检测数组和对象的变化-怎么处理-为什么通过索引操作数组不能触发响应式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-为什么不能检测数组和对象的变化-怎么处理-为什么通过索引操作数组不能触发响应式"}},[t._v("#")]),t._v(" Vue 为什么不能检测数组和对象的变化,怎么处理(为什么通过索引操作数组不能触发响应式)")]),t._v(" "),s("h3",{attrs:{id:"vue-router原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router原理"}},[t._v("#")]),t._v(" vue router原理")]),t._v(" "),s("h3",{attrs:{id:"v-model实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-model实现原理"}},[t._v("#")]),t._v(" v-model实现原理")]),t._v(" "),s("p",[t._v("本身只是一个语法糖，原理是依靠")]),t._v(" "),s("ul",[s("li",[t._v("用 v-bind 编写响应式数据")]),t._v(" "),s("li",[t._v("触发 oninput 事件并传递数据")])]),t._v(" "),s("h3",{attrs:{id:"vue-nexttick"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-nexttick"}},[t._v("#")]),t._v(" vue.nexttick")]),t._v(" "),s("h3",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"mvvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[t._v("#")]),t._v(" MVVM")]),t._v(" "),s("p",[t._v("M数据模型层： M 改变会引起 VM自动更新，View也会自动变化")]),t._v(" "),s("p",[t._v("V视图层：V 变化， 也会自动反映在 ViewModel")]),t._v(" "),s("p",[t._v("VM 调度者：  "),s("strong",[t._v("提供了数据的双向绑定")]),t._v("，实时改变数据状态，及页面反馈")]),t._v(" "),s("blockquote",[s("p",[t._v("MVVM"),s("strong",[t._v("主要解决了MVC中大量的DOM操作使页面")]),t._v("渲染性能降低，加载速度变慢，影响用户体验。")])]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://img2018.cnblogs.com/blog/1404918/201902/1404918-20190219115337118-140425768.png",alt:"img"}}),t._v(" "),s("h3",{attrs:{id:"mvc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvc"}},[t._v("#")]),t._v(" MVC")]),t._v(" "),s("p",[t._v("V视图层:  页面行为会传送到 C")]),t._v(" "),s("p",[t._v("c 控制器：C 去通知 Model改变状态， "),s("strong",[t._v("都是单向通信")])]),t._v(" "),s("p",[t._v("M数据层：Model将新的数据 发送到View, 用户得到反馈")]),t._v(" "),s("blockquote",[s("p",[t._v("Model与VIew是完全隔离的，由 Controller 来处理二者间的交互，同时这三者也都是"),s("strong",[t._v("完全独立分开的，所有通信都是单向的")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.ruanyifeng.com/blogimg/asset/2015/bg2015020105.png",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"promise-基本上要求可以手写promise-all方法-这个问的最多"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-基本上要求可以手写promise-all方法-这个问的最多"}},[t._v("#")]),t._v(" promise(基本上要求可以手写Promise.all方法,这个问的最多)")]),t._v(" "),s("p",[t._v("promist.all:  将多个promise对象包装成一个，成功时返回一个结果数组，失败时返回最先失败的状态值")]),t._v(" "),s("p",[t._v("promise.race:  也是将多个promise实例包装成一个实例执行，不管结果成功与失败，只返回最快等到结果的那个")]),t._v(" "),s("h3",{attrs:{id:"async-await"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[t._v("#")]),t._v(" async/await")]),t._v(" "),s("blockquote",[s("p",[t._v("是一个以同步思维解决异步问题的方案(等结果出来代码才往下执行)，优化了promise的使用方式，减少了链式调用")]),t._v(" "),s("p",[t._v("基于Promise, 并且借助于 Promise 在async函数中，使用 await 获取 Promise 异步函数的 resolve 状态下返回的数据")])]),t._v(" "),s("p",[t._v("async： 关键字，用来定义一个异步函数，并且返回这个 promise对象(是基于promise的)")]),t._v(" "),s("ul",[s("li",[t._v("async异步函数存在.then方法，可以指定的回调函数")]),t._v(" "),s("li",[t._v("并且只有在 async函数内的异步执行完，才会执行 .then方法里的回调")]),t._v(" "),s("li",[t._v("async异步函数的内部也可以使用await关键字")])]),t._v(" "),s("p",[t._v("await: \t关键定，用于等待一个 promise 对象, "),s("strong",[t._v("只能在 async 异步函数中使用")])]),t._v(" "),s("ul",[s("li",[t._v("await 命令后面是一个 Promise 对象，它也可以跟其他值，如字符串，布尔值，数值以及普通函数。")]),t._v(" "),s("li",[t._v("await 将等待 Promise 正常处理完成并返回其处理结果")]),t._v(" "),s("li",[t._v("async 函数执行时，如果遇到 await 就会先暂停执行 ，等到触发的异步操作完成后，恢复 async 函数的执行并返回解析值。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设一个promise异步操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testAwait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testAwait"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义 async异步函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asyncFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遇到 await 就会先暂停执行")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等到触发的异步操作完成后")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("textAwait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 恢复 async 函数的执行并返回解析值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asyncFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"跨域形成原因以及解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域形成原因以及解决方案"}},[t._v("#")]),t._v(" 跨域形成原因以及解决方案")]),t._v(" "),s("h3",{attrs:{id:"箭头函数和普通函数有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数和普通函数有什么区别"}},[t._v("#")]),t._v(" 箭头函数和普通函数有什么区别")]),t._v(" "),s("ul",[s("li",[t._v("写法不同")]),t._v(" "),s("li",[t._v("全是匿名函数")]),t._v(" "),s("li",[t._v("不可以使用new")]),t._v(" "),s("li",[t._v("没有prototype原型对象")]),t._v(" "),s("li",[t._v("this指向不同")])]),t._v(" "),s("h3",{attrs:{id:"最近在看什么新技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最近在看什么新技术"}},[t._v("#")]),t._v(" 最近在看什么新技术")]),t._v(" "),s("h1",{attrs:{id:"低频但是需要注意的面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#低频但是需要注意的面试题"}},[t._v("#")]),t._v(" 低频但是需要注意的面试题")]),t._v(" "),s("ul",[s("li",[t._v("CSRF & XSS")]),t._v(" "),s("li",[t._v("chrome设置小于12px字体")]),t._v(" "),s("li",[t._v("node和浏览器事件循环有何不同")]),t._v(" "),s("li",[t._v("webpack tree shaking")]),t._v(" "),s("li",[t._v("map & set")]),t._v(" "),s("li",[t._v("前端有哪些技术(腾讯面试题,面试官会顺着你说的技术一个一个展开问)")]),t._v(" "),s("li",[t._v("实现一个call/bind(call,apply,bind区别)")]),t._v(" "),s("li",[t._v("get 和 post 的区别")]),t._v(" "),s("li",[t._v("BFC")]),t._v(" "),s("li",[t._v("yield")]),t._v(" "),s("li",[t._v("如何给localStorage加上max-age功能")]),t._v(" "),s("li",[t._v("Object.defineProperties都有那些参数,以及参数解释")]),t._v(" "),s("li",[t._v("requestAnimation")]),t._v(" "),s("li",[t._v("手写原型链和js各种继承模式")]),t._v(" "),s("li",[t._v("让你重新做你做过的项目有什么可以改进的地方")]),t._v(" "),s("li",[t._v("让一个元素消失的几种做法，有何不同，对子元素的影响")]),t._v(" "),s("li",[t._v("如何遍历对象(接下来会问有何不同)")]),t._v(" "),s("li",[t._v("搜索框输入需要注意的点(其实还是在问防抖)")]),t._v(" "),s("li",[t._v("原生实现inserAfter")]),t._v(" "),s("li",[t._v("事件委托应用场景，e.target和e.currentTarget区别")]),t._v(" "),s("li",[t._v("HTTP缓存，对应字段，cache-contron都有那些值")]),t._v(" "),s("li",[t._v("new过程都发生了什么")])])])}),[],!1,null,null,null);s.default=e.exports}}]);